{"version":3,"sources":["component/Markdown.js","component/Latex2.js","component/Perceptron.js","component/Home.js","component/Video.js","component/Draw.js","component/Game/index.js","App.js","serviceWorker.js","index.js","assets/cheatsheet/Markdown.md","assets/cheatsheet/latex.md","assets/test.md","assets/Home.md","assets/Mark.md","assets/dessins.md"],"names":["window","html2canvas","converter","Converter","tables","tasklists","sheet","require","Markdown","state","markdown","cheatsheet","undefined","pdf","fetch","then","res","text","setState","convert","event","this","target","result","file","files","reader","FileReader","onload","handleFile","bind","readAsText","div","document","getElementById","innerHTML","console","log","jsPDF","pdf1","split","pdf2","e","push","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","value","id","html","className","name","rows","cols","onChange","change","type","upload","accept","onClick","download","React","Component","Latex","Latex2","latex","data","Perceptron","content","logo0","Home","logo","Video","urls","map","url","src","render_url","Draw","Game","snake","top","left","food","score","pos","onkeydown","preventDefault","head","s","higher","keyCode","h","w","block","key","Math","random","x","floor","y","height","width","renderSnake","marginTop","marginLeft","App","to","exact","path","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"2SAOAA,OAAOC,YAAcA,IAErB,IAAIC,EAAY,IAAIC,YAAU,CAACC,OAAO,OAAOC,WAAU,IAEnDC,EAAQC,EAAQ,IA6ILC,E,YA1IX,aAAc,IAAD,8BACT,+CAEKC,MAAQ,CACTC,SAAS,6BACTC,gBAAWC,EACXC,IAAI,yBANC,E,sNAWHC,MAAMR,GAAOS,MAAK,SAAAC,GACpB,OAAOA,EAAIC,UACZF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACVP,WAAWT,EAAUiB,QAAQH,Q,kIAK9BI,GAGHC,KAAKH,SAAS,CACVR,SAASU,EAAME,OAAOC,W,sEAKrBH,G,yEAELI,EAAOJ,EAAME,OAAOG,MAAM,IAC1BC,EAAS,IAAIC,YAEVC,OAASP,KAAKQ,WAAWC,KAAKT,MAErCK,EAAOK,WAAWP,G,6QAelB,IATMQ,EAAMC,SAASC,eAAe,OAChCrB,EAAMmB,EAAIG,UAEdC,QAAQC,IAAIxB,GAEF,IAAIyB,EAEVC,EAAO1B,EAAI2B,MAAM,OACjBC,EAAO,G,4BACX,EAAcF,EAAd,+CAASG,EAAU,QACfD,EAAKE,KAAKD,EAAEF,MAAM,S,yOAGtBJ,QAAQC,IAAII,G,iKAIPC,GAGL,IAAMzB,EAAOI,KAAKZ,MAAMC,SAGpBkC,EAAUX,SAASY,cAAc,KACrCD,EAAQE,aAAa,OAAQ,iCAAmCC,mBAAmB9B,IACnF2B,EAAQE,aAAa,WAJJ,eAMjBF,EAAQI,MAAMC,QAAU,OACxBhB,SAASiB,KAAKC,YAAYP,GAE1BA,EAAQQ,QAERnB,SAASiB,KAAKG,YAAYT,K,6BAGvBF,GAIH,IAAMpB,EAASoB,EAAEpB,OAEG,KAAjBA,EAAOgC,YAAiC1C,IAAjBU,EAAOgC,MAC7BjC,KAAKH,SAAL,eACKI,EAAOiC,GAAK,KAGjBlC,KAAKH,SAAL,eACKI,EAAOiC,GAAKjC,EAAOgC,U,+BAU5B,IAAIE,EAAMtD,EAAUiB,QAAQE,KAAKZ,MAAMC,UAEvC,OAAQ,yBAAK+C,UAAU,SAEf,qDAEA,8BACIA,UAAU,eACVF,GAAG,WACHG,KAAK,QACLC,KAAK,IAAIC,KAAK,KACdN,MAAOjC,KAAKZ,MAAMC,SAClBmD,SAAUxC,KAAKyC,OAAOhC,KAAKT,QAE/B,2BAAO0C,KAAK,OAAOF,SAAUxC,KAAK2C,OAAOlC,KAAKT,MAAO4C,OAAO,QAC5D,4BAAQC,QAAS7C,KAAK8C,SAASrC,KAAKT,OAApC,qBAGA,6BAhBA,IAgBO,6BACP,yBAAKoC,UAAW,cACZ,sCACA,yBAAKF,GAAG,MAAME,UAAU,sCACvBD,GAIL,yBAAKC,UAAU,mCACX,0CACA,yBAAKA,UAAU,iCAAiCpC,KAAKZ,MAAME,mB,GAhIxDyD,IAAMC,WCTzBC,EAAQ/D,EAAQ,IAEhBL,EAAY,IAAIC,YAAU,CAACC,OAAO,OAAOC,WAAU,IAEnDC,EAAQC,EAAQ,IA6HLgE,E,YAzHX,aAAc,IAAD,8BACT,+CAEK9D,MAAQ,CACT+D,MAAM,yBACN7D,gBAAWC,GALN,E,sNAUHE,MAAMR,GAAOS,MAAK,SAAAC,GACpB,OAAOA,EAAIC,UACZF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACVP,WAAWK,O,kIAMZI,GAGPC,KAAKH,SAAS,CACVsD,MAAMpD,EAAME,OAAOC,W,sEAKlBH,G,yEAELK,EAAQL,EAAME,OAAOG,OACrBC,EAAS,IAAIC,YAEVI,WAAWN,EAAM,IAExBC,EAAOE,OAAOP,KAAKQ,WAAWC,KAAKT,M,sIAM9BqB,GAGL,IAAMzB,EAAOI,KAAKZ,MAAM+D,MAGpB5B,EAAUX,SAASY,cAAc,KACrCD,EAAQE,aAAa,OAAQ,iCAAmCC,mBAAmB9B,IACnF2B,EAAQE,aAAa,WAJJ,aAMjBF,EAAQI,MAAMC,QAAU,OACxBhB,SAASiB,KAAKC,YAAYP,GAE1BA,EAAQQ,QAERnB,SAASiB,KAAKG,YAAYT,K,6BAGnBF,GAIH,IAAMpB,EAASoB,EAAEpB,OAEG,KAAjBA,EAAOgC,YAAiC1C,IAAjBU,EAAOgC,MAC7BjC,KAAKH,SAAL,eACKI,EAAOiC,GAAK,KAGjBlC,KAAKH,SAAL,eACKI,EAAOiC,GAAKjC,EAAOgC,U,+BAUjBpD,EAAUiB,QAAQE,KAAKZ,MAAM+D,OAExC,OAAQ,yBAAKf,UAAU,SAEnB,kDAEA,8BACIA,UAAU,eACVF,GAAG,QACHG,KAAK,QACLC,KAAK,IAAIC,KAAK,KACdN,MAAOjC,KAAKZ,MAAM+D,MAClBX,SAAUxC,KAAKyC,OAAOhC,KAAKT,QAE/B,2BAAO0C,KAAK,OAAOF,SAAUxC,KAAK2C,OAAOlC,KAAKT,MAAO4C,OAAO,SACxD,4BAAQC,QAAS7C,KAAK8C,SAASrC,KAAKT,OAApC,kBAEJ,yBAAKoC,UAAW,cACZ,sCACA,yBAAKA,UAAU,iCACX,kBAACa,EAAD,KAAQjD,KAAKZ,MAAM+D,QAKvB,yBAAKf,UAAU,mCACX,0CACA,yBAAKA,UAAU,iCAAgC,kBAACa,EAAD,KAAQjD,KAAKZ,MAAME,oB,GA9GjEyD,IAAMC,WCNvBI,GADQlE,EAAQ,IACTA,EAAQ,KAEfL,EAAY,IAAIC,YAAU,CAACC,OAAO,OAAOC,WAAU,IA8BxCqE,E,YA1BX,aAAc,IAAD,8BACT,+CACKjE,MAAQ,CACTkE,aAAQ/D,GAHH,E,sNASHE,MAAM2D,GAAM1D,MAAK,SAAAC,GACnB,OAAOA,EAAIC,UACZF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACVyD,QAAQzE,EAAUiB,QAAQH,Q,gIAMlC,OAAO,yBAAKyC,UAAU,SAClB,0CACA,yBAAKA,UAAU,yBAAyBpC,KAAKZ,MAAMkE,c,GAtBtCP,IAAMC,WCP3BnE,EAAY,IAAIC,YAAU,CAACC,OAAO,OAAOC,WAAU,IAGnDoE,EAAOlE,EAAQ,IACfqE,EAAQrE,EAAQ,IA0CLsE,E,YAvCX,aAAc,IAAD,8BACT,+CACKpE,MAAM,CACPkE,aAAQ/D,EACRkE,UAAKlE,EACL4D,WAAM5D,GALD,E,sNAWHE,MAAM2D,GAAM1D,MAAK,SAAAC,GACnB,OAAOA,EAAIC,UACZF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACVyD,QAAQzE,EAAUiB,QAAQH,Q,uBAK5BF,MAAM8D,GAAO7D,MAAK,SAAAC,GACpB,OAAOA,EAAIC,UACZF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACV4D,KAAK5E,EAAUiB,QAAQH,Q,gIAM/B,OAAO,yBAAKyC,UAAU,SAClB,2CACA,yBAAKA,UAAU,kCAAkCpC,KAAKZ,MAAMkE,SAC5D,mDACA,yBAAKlB,UAAU,kCAAkCpC,KAAKZ,MAAMqE,W,GAnCrDV,IAAMC,WCuBVU,E,YA7BX,aAAc,IAAD,8BACT,+CACKtE,MAAM,CACPuE,KAAK,CACD,8CACA,gDALC,E,0EAkBT,OAPY3D,KAAKZ,MAAMuE,KAAKC,KAAI,SAACC,GAC7B,OAAO,6BACH,4BAAQC,IAAKD,U,+BASrB,OAAO,6BACH,8CACC7D,KAAK+D,kB,GAzBEhB,IAAMC,WCEtBnE,EAAY,IAAIC,YAAU,CAACC,OAAO,OAAOC,WAAU,IAEnDoE,EAAOlE,EAAQ,IA4BJ8E,E,YAzBX,aAAc,IAAD,8BACT,+CACK5E,MAAM,CACPkE,aAAQ/D,GAHH,E,sNAQHE,MAAM2D,GAAM1D,MAAK,SAAAC,GACnB,OAAOA,EAAIC,UACZF,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACVyD,QAAQzE,EAAUiB,QAAQH,Q,gIAMlC,OAAO,yBAAKyC,UAAU,UAClB,4CACA,yBAAKA,UAAU,OAAM,yBAAKA,UAAU,YAAYpC,KAAKZ,MAAMkE,e,GArBpDP,IAAMC,WCFJiB,G,mBAEjB,aAAc,IAAD,8BACT,+CAEK7E,MAAQ,CACT8E,MAAM,CAAC,CAACC,IAAI,GAAGC,KAAK,KACpBC,KAAK,CAACF,IAAI,GAAGC,KAAK,IAClBE,MAAM,EACNC,IAAI,QAPC,E,iFAaT3D,SAAS4D,UAAYxE,KAAKwE,UAAU/D,KAAKT,Q,gCAGnCqB,IACNA,EAAIA,GAAK1C,OAAOoB,OACd0E,iBAEF,IAAIP,EAAQlE,KAAKZ,MAAM8E,MAEnBQ,EAAOR,EAAM,GAEbG,EAAOrE,KAAKZ,MAAMiF,KARd,uBAUR,YAAcH,EAAd,+CAAoB,CAAC,IAAZS,EAAW,QACbN,EAAKF,MAAMQ,EAAER,IAAI,IAAME,EAAKD,OAAOO,EAAEP,MACpCpE,KAAK4E,UAZL,kFAiBR,OAAOvD,EAAEwD,SACL,KAAK,GAEDH,EAAKP,KAAK,GACNO,EAAKP,IAAI,IAAGO,EAAKP,KAAK,IAE1BnE,KAAKH,SAAS,CACVqE,MAAMA,EACNK,IAAI,YAER,MACJ,KAAK,GAEGG,EAAKP,KAAK,GACNO,EAAKP,IAAIW,MAAMJ,EAAKP,KAAK,IAC7BnE,KAAKH,SAAS,CACVqE,MAAMA,EACNK,IAAI,cAEZ,MACJ,KAAK,GAEDG,EAAKN,MAAM,GACPM,EAAKN,KAAK,IAAGM,EAAKN,MAAM,IAC5BpE,KAAKH,SAAS,CACVqE,MAAMA,EACNK,IAAI,cAER,MACJ,KAAK,GAEDG,EAAKN,MAAM,GACPM,EAAKN,KAAKW,MAAML,EAAKN,MAAM,IAC/BpE,KAAKH,SAAS,CACVqE,MAAMA,EACNK,IAAI,kB,oCAQN,IAAD,OACLL,EAAQlE,KAAKZ,MAAM8E,MAInBvE,GAHOK,KAAKZ,MAAMiF,KAGZH,EAAMN,KAAI,SAACoB,GACjB,OAAO,yBAAK5C,UAAW,EAAKhD,MAAMmF,IAAKU,IAAKC,KAAKC,SAAUxD,MAAO,CAACwC,IAAIa,EAAMb,IAAIC,KAAKY,EAAMZ,YAGhG,OAAO,6BAAMzE,K,+BAIboB,QAAQC,IAAI,SAEAhB,KAAKZ,MAAM8E,MAAvB,IAIIkB,EAAiC,GAA7BF,KAAKG,MAAoB,GAAdH,KAAKC,UACpBG,EAAiC,GAA7BJ,KAAKG,MAAoB,GAAdH,KAAKC,UAEpBb,EAAQtE,KAAKZ,MAAMkF,MAAM,EAG7BtE,KAAKH,SAAS,CACVwE,KAAK,CAACF,IAAImB,EAAElB,KAAKgB,GAEjBd,MAAMA,M,+BAMV,OAAO,6BACH,sCAAYtE,KAAKZ,MAAMkF,OACvB,yBAAKlC,UAAU,QAAQT,MAAO,CAAC4D,OAAO,GAAD,OArHvC,IAqHuC,MAAWC,MAAM,GAAD,OApHvD,IAoHuD,QAErD,yBAAKpD,UAAU,SACVpC,KAAKyF,eAEV,yBAAKrD,UAAU,OAAOT,MAAO,CAAC+D,UAAU1F,KAAKZ,MAAMiF,KAAKF,IAAIwB,WAAW3F,KAAKZ,MAAMiF,KAAKD,c,GAvHjErB,IAAMC,YCkEzB4C,MApDf,WACE,OAAQ,6BACN,kBAAC,IAAD,KACE,yBAAKxD,UAAU,+CACf,yBAAKA,UAAU,gBAAf,WACE,wBAAIA,UAAU,kCACV,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMyD,GAAG,KAAT,SAEF,wBAAIzD,UAAU,YACZ,kBAAC,IAAD,CAAMyD,GAAG,SAAT,aAEF,wBAAIzD,UAAU,YACZ,kBAAC,IAAD,CAAMyD,GAAG,UAAT,UAEF,wBAAIzD,UAAU,YACZ,kBAAC,IAAD,CAAMyD,GAAG,SAAT,WAOV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,EAAD,OACpB,kBAAC,IAAD,CAAOA,KAAK,eAAc,kBAAC,EAAD,OAC1B,kBAAC,IAAD,CAAOA,KAAK,UAAS,kBAAC,EAAD,OACrB,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,EAAD,OACpB,kBAAC,IAAD,CAAOA,KAAK,UAAS,kBAAC,EAAD,OACrB,kBAAC,IAAD,CAAOA,KAAK,SAAQ,kBAAC,EAAD,WCtCNC,QACW,cAA7BrH,OAAOsH,SAASC,UAEe,UAA7BvH,OAAOsH,SAASC,UAEhBvH,OAAOsH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASzF,SAASC,eAAe,SD2H3C,kBAAmByF,WACrBA,UAAUC,cAAcC,MAAM9G,MAAK,SAAA+G,GACjCA,EAAaC,iB,qHEnInBC,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.5e22f4c2.chunk.js","sourcesContent":["import React from 'react'\nimport { Converter } from 'react-showdown';\n// import './full.css'\nimport html2canvas from 'html2canvas'\nimport * as jsPDF from \"jspdf\"\n\n\nwindow.html2canvas = html2canvas\n\nlet converter = new Converter({tables:'true',tasklists:true});\n\nvar sheet = require('../assets/cheatsheet/Markdown.md')\n\nclass Markdown extends React.Component{\n    constructor(){\n        super();\n\n        this.state = {\n            markdown:\"come and write **here**!!!\",\n            cheatsheet:undefined,\n            pdf:\"vous n'avez rien ecri\"\n        }\n    }\n\n    async componentDidMount(){\n        await fetch(sheet).then(res=>{\n            return res.text()\n        }).then(res=>{\n            this.setState({\n                cheatsheet:converter.convert(res)\n            })\n        })\n    }\n\n    handleFile(event) {\n            // The file's text will be printed here\n\n            this.setState({\n                markdown:event.target.result\n            })\n\n    }\n\n    async upload(event){\n        \n        var file = event.target.files[0];\n        var reader = new FileReader();\n\n        reader.onload = this.handleFile.bind(this)\n\n        reader.readAsText(file);\n\n    }\n\n    async downloadPDF(){\n\n        const div = document.getElementById(\"pdf\")\n        let pdf = div.innerHTML\n\n        console.log(pdf)\n\n        var doc = new jsPDF()\n\n        let pdf1 = pdf.split(\"<p>\")\n        let pdf2 = []\n        for (var e of pdf1){\n            pdf2.push(e.split(\"</p>\"))\n        }\n\n        console.log(pdf2)\n\n    }\n\n    download(e) {\n\n\n        const text = this.state.markdown\n        const filename = \"markdown.md\"\n\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n      \n        element.style.display = 'none';\n        document.body.appendChild(element);\n      \n        element.click();\n      \n        document.body.removeChild(element);\n      }\n\n    change(e){\n\n        //l' id doit être identique au nom de variable\n\n        const target = e.target;\n\n        if(target.value === \"\" || target.value === undefined) {\n            this.setState({\n                [target.id] :\"\"\n        });\n        }else{\n            this.setState({\n                [target.id] :target.value //on récupère le contenu de l'id correspondant\n            });\n\n        }\n\n    }\n\n\n    render(){\n        \n        var html =converter.convert(this.state.markdown);\n\n        return (<div className=\"block\">\n\n                <h2>Edit your Markdown!!!</h2>\n\n                <textarea \n                    className=\"form-control\"\n                    id=\"markdown\" \n                    name=\"story\"\n                    rows=\"5\" cols=\"33\" \n                    value={this.state.markdown}\n                    onChange={this.change.bind(this)}\n                />\n                <input type=\"file\" onChange={this.upload.bind(this)} accept=\".md\" />\n                <button onClick={this.download.bind(this)}>download Markdown</button>\n                {/* <button onClick={this.downloadPDF.bind(this)}>download PDF</button> */}\n\n                <br /> <br />\n                <div className =\"cheatsheet\">\n                    <h2>rendu:</h2>\n                    <div id=\"pdf\" className=\"render rounded left pre-scrollable\">\n                    {html}\n                    </div>\n\n                    \n                <div className=\"right render rounded cheatsheet\">\n                    <h2>cheatsheet</h2>\n                    <div className=\"render rounded pre-scrollable\">{this.state.cheatsheet}</div>\n                </div>\n            </div>\n\n        </div>)\n\n    }\n\n    \n}\n\nexport default Markdown;","import React from 'react'\nimport { Converter } from 'react-showdown';\n// import './full.css'\n\nvar Latex = require('react-latex')\n\nlet converter = new Converter({tables:'true',tasklists:true});\n\nvar sheet = require('../assets/cheatsheet/latex.md')\n\n\nclass Latex2 extends React.Component{\n    constructor(){\n        super();\n\n        this.state = {\n            latex:\"come and write here!!!\",\n            cheatsheet:undefined\n        }\n    }\n\n    async componentDidMount(){\n        await fetch(sheet).then(res=>{\n            return res.text()\n        }).then(res=>{\n            this.setState({\n                cheatsheet:res\n            })\n        })\n    }\n\n\n    handleFile(event) {\n        // The file's text will be printed here\n\n        this.setState({\n            latex:event.target.result\n        })\n\n}\n\nasync upload(event){\n    \n    var files = event.target.files;\n    var reader = new FileReader();\n\n    reader.readAsText(files[0])\n\n    reader.onload=this.handleFile.bind(this)\n\n    \n\n}\n\ndownload(e) {\n\n\n    const text = this.state.latex\n    const filename = \"latex.tex\"\n\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n  \n    element.style.display = 'none';\n    document.body.appendChild(element);\n  \n    element.click();\n  \n    document.body.removeChild(element);\n  }\n\n    change(e){\n\n        //l' id doit être identique au nom de variable\n\n        const target = e.target;\n\n        if(target.value === \"\" || target.value === undefined) {\n            this.setState({\n                [target.id] :\"\"\n        });\n        }else{\n            this.setState({\n                [target.id] :target.value //on récupère le contenu de l'id correspondant\n            });\n\n        }\n\n    }\n\n\n    render(){\n        \n        let html = converter.convert(this.state.latex)\n\n        return (<div className=\"block\">\n\n            <h2>Edit your Latex!!!</h2>\n\n            <textarea \n                className=\"form-control\"\n                id=\"latex\" \n                name=\"story\"\n                rows=\"5\" cols=\"33\" \n                value={this.state.latex}\n                onChange={this.change.bind(this)}\n            />\n            <input type=\"file\" onChange={this.upload.bind(this)} accept=\".tex\" />\n                <button onClick={this.download.bind(this)}>download latex</button>\n            \n            <div className =\"cheatsheet\">\n                <h2>rendu:</h2>\n                <div className=\"render rounded pre-scrollable\">\n                    <Latex>{this.state.latex}</Latex>\n\n                </div>\n\n\n                <div className=\"right render rounded cheatsheet\">\n                    <h2>cheatsheet</h2>\n                    <div className=\"render rounded pre-scrollable\"><Latex>{this.state.cheatsheet}</Latex></div>\n                </div>\n\n            </div>\n\n        </div>)\n\n    }\n\n    \n}\n\nexport default Latex2;","import React from 'react'\nimport {  Converter } from 'react-showdown';\n\n\nvar Latex = require('react-latex')\nvar data = require('../assets/test.md')\n\nlet converter = new Converter({tables:'true',tasklists:true});\n\n\nclass Perceptron extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            content:undefined\n        }\n        \n    }\n\n    async componentDidMount(){\n        await fetch(data).then(res=>{\n            return res.text()\n        }).then(res=>{\n            this.setState({\n                content:converter.convert(res)\n            })\n        })\n    }\n\n    render(){\n        return(<div className=\"block\">\n            <h1>Perceptron</h1>\n            <div className=\"render render-rounded\">{this.state.content}</div>         \n        </div>)\n    }\n}\n\nexport default Perceptron","import  React from \"react\";\nimport { Markdown as Showdown , Converter } from 'react-showdown';\n\nlet converter = new Converter({tables:'true',tasklists:true});\n\n\nvar data = require('../assets/Home.md')\nlet logo0 = require('../assets/Mark.md')\n\nclass Home extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            content:undefined,\n            logo:undefined,\n            latex:undefined\n\n        }\n    }\n\n    async componentDidMount(){\n        await fetch(data).then(res=>{\n            return res.text()\n        }).then(res=>{\n            this.setState({\n                content:converter.convert(res)\n            })\n        })\n\n\n        await fetch(logo0).then(res=>{\n            return res.text()\n        }).then(res=>{\n            this.setState({\n                logo:converter.convert(res)\n            })\n        })\n    }\n\n    render(){\n        return(<div className=\"block\">\n            <h1>Description</h1>\n            <div className=\"render rounded body cheatsheet\">{this.state.content}</div>\n            <h2>Edition de document</h2>\n            <div className=\"render rounded body cheatsheet\">{this.state.logo}</div>\n        </div>)\n    }\n}\n\nexport default Home","import React from \"react\";\n\nclass Video extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            urls:[\n                \"https://www.youtube.com/watch?v=pFnWPTq3458\",\n                \"https://www.youtube.com/watch?v=32fXJ_rnz9E\"\n            ]\n        }\n    }\n\n    render_url(){\n        var frame = this.state.urls.map((url)=>{\n            return(<div>\n                <iframe src={url}></iframe>\n            </div>\n            )\n        })\n\n        return frame\n    }\n\n    render(){\n        return(<div>\n            <h2>mes vidéos:</h2>\n            {this.render_url()}\n        </div>)\n    }\n}\n\nexport default Video","import React from \"react\";\n\nimport {  Converter } from 'react-showdown';\n\nlet converter = new Converter({tables:'true',tasklists:true});\n\nvar data = require('../assets/dessins.md')\n\nclass Draw extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            content:undefined\n        }\n    }\n\n    async componentDidMount(){\n        await fetch(data).then(res=>{\n            return res.text()\n        }).then(res=>{\n            this.setState({\n                content:converter.convert(res)\n            })\n        })\n    }\n\n    render(){\n        return(<div className=\"block \">\n            <h2>mes dessins:</h2>\n            <div className=\"box\"><div className=\"drawings\">{this.state.content}</div></div>\n        </div>)\n    }\n}\n\nexport default Draw","import React from 'react'\nimport './game.css'\n\nconst h = 500\nconst w = 500\n\nexport default class Game extends React.Component{\n\n    constructor(){\n        super()\n\n        this.state = {\n            snake:[{top:10,left:10}],\n            food:{top:10,left:10},\n            score:0,\n            pos:\"down\"\n\n        }\n    }\n\n    componentDidMount(){\n        document.onkeydown = this.onkeydown.bind(this)\n    }\n\n    onkeydown(e){\n        e = e || window.event\n        e.preventDefault()\n\n        let snake = this.state.snake\n\n        let head = snake[0]\n\n        let food = this.state.food\n\n        for (let s of snake){\n            if(food.top===s.top-10 && food.left===s.left){\n                this.higher()\n            }\n        }\n        \n\n        switch(e.keyCode){\n            case 38:\n                //haut\n                head.top-=10\n                if (head.top<0){head.top+=10}\n\n                this.setState({\n                    snake:snake,\n                    pos:\"up_walk\"\n                })\n                break;\n            case 40:\n                    //bas\n                    head.top+=10\n                    if (head.top>h-10){head.top-=10}\n                    this.setState({\n                        snake:snake,\n                        pos:\"down_walk\"\n                    })\n                break;\n            case 37:\n                //gauche\n                head.left-=10\n                if (head.left<0){head.left+=10}\n                this.setState({\n                    snake:snake,\n                    pos:\"left_walk\"\n                })\n                break;\n            case 39:\n                //droite\n                head.left+=10\n                if (head.left>w-10){head.left-=10}\n                this.setState({\n                    snake:snake,\n                    pos:\"right_walk\"\n                })\n                break;\n        }\n\n        \n    }\n\n    renderSnake(){\n        let snake = this.state.snake\n        let food = this.state.food\n        \n\n        let res = snake.map((block)=>{\n            return(<div className={this.state.pos} key={Math.random()} style={{top:block.top,left:block.left}}></div>)\n        })\n\n        return(<div>{res}</div>)\n    }\n\n    higher(){\n        console.log(\"cling\")\n\n        let snake = this.state.snake\n\n        //snake.push(snake[0])\n\n        let x = Math.floor(Math.random()*10)*50\n        let y = Math.floor(Math.random()*10)*50\n\n        let score = this.state.score+1\n\n\n        this.setState({\n            food:{top:y,left:x},\n            // snake:snake,\n            score:score\n        })\n    }\n\n\n    render(){\n        return(<div >\n            <div>score:{this.state.score}</div>\n            <div className=\"board\" style={{height: `${h}px`,width:`${w}px`}}>\n            \n            <div className=\"snake\" >\n                {this.renderSnake()}\n            </div>\n            <div className=\"food\" style={{marginTop:this.state.food.top,marginLeft:this.state.food.left}} ></div>\n        </div>\n        </div>)\n    }\n\n}","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Markdown from \"./component/Markdown\"\nimport Latex2 from \"./component/Latex2\"\nimport Pereptron from \"./component/Perceptron\"\nimport Home from \"./component/Home\"\nimport video from \"./component/Video\"\nimport Video from './component/Video';\nimport Draw from './component/Draw'\nimport Game from './component/Game/index'\n\nfunction App() {\n  return (<div >\n    <Router>\n      <nav className=\"navbar navbar-expand navbar-light bg-light \"> \n      <div className=\"navbar-brand\" >Fana_RK</div>\n        <ul className=\"sidebar-nav navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\">Home</Link>\n            </li> \n            <li className=\"nav-item\">\n              <Link to=\"/Edit\">Markdown</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/Latex\">Latex</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/Game\">Game</Link>\n            </li>\n             \n        </ul>\n      </nav>\n\n\n    <Switch>\n      <Route exact path=\"/\"><Home /></Route>\n      <Route path=\"/Edit\"><Markdown /></Route>\n      <Route path=\"/Perceptron\"><Pereptron /></Route>\n      <Route path=\"/video\"><Video /></Route>\n      <Route path=\"/Draw\"><Draw /></Route>\n      <Route path=\"/Latex\"><Latex2 /></Route>\n      <Route path=\"/Game\"><Game /></Route>\n\n    </Switch>\n    </Router></div>\n  );\n}\n\nfunction Error() {\n  return (\n    <div>\n      <h2>Error</h2>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h2>Dashboard</h2>\n    </div>\n  )\n  }\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Markdown.8ab926ae.md\";","module.exports = __webpack_public_path__ + \"static/media/latex.8841f7a9.md\";","module.exports = __webpack_public_path__ + \"static/media/test.71b87546.md\";","module.exports = __webpack_public_path__ + \"static/media/Home.0a1186f5.md\";","module.exports = __webpack_public_path__ + \"static/media/Mark.bfa91b0c.md\";","module.exports = __webpack_public_path__ + \"static/media/dessins.0a28b5c6.md\";"],"sourceRoot":""}